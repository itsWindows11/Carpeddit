<Page
    x:Class="Carpeddit.App.Pages.PostDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:controllers="using:Carpeddit.App.Controllers"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Carpeddit.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:Carpeddit.App.Helpers"
    xmlns:local="using:Carpeddit.App.Pages"
    xmlns:local1="using:Carpeddit.App"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:redditthings="using:Reddit.Things"
    xmlns:templates="using:Carpeddit.App.Templates"
    xmlns:uc="using:Carpeddit.App.UserControls"
    xmlns:viewmodels="using:Carpeddit.App.ViewModels"
    x:Name="RootPage"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    mc:Ignorable="d">

    <Page.Resources>
        <converters:InvertBoolConverter x:Key="InvertBoolConv" />
    </Page.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="0.5*" />
        </Grid.ColumnDefinitions>

        <Grid.Background>
            <SolidColorBrush x:Name="ColorBrushBg" Opacity="0.1" />
        </Grid.Background>

        <uc:CustomTitleBar
            Title="Post details"
            Grid.ColumnSpan="2"
            Visibility="{x:Bind _isNotSeparate, Mode=OneWay, Converter={StaticResource BoolToVis}}" />

        <ScrollViewer Grid.Row="1" Padding="66,0">
            <StackPanel>
                <muxc:InfoBar
                    Title="The moderators of this subreddit has removed this post."
                    MaxWidth="1200"
                    IsClosable="False"
                    IsOpen="{x:Bind Post.Post.Listing.Removed}" />

                <muxc:InfoBar
                    Title="This post has been archived"
                    MaxWidth="1200"
                    IsClosable="False"
                    IsOpen="{x:Bind Post.Post.Listing.Archived}"
                    Message="You cannot submit new comments, vote or reply to this post."
                    Severity="Warning" />

                <muxc:InfoBar
                    Title="This post has been locked"
                    MaxWidth="1200"
                    IsClosable="False"
                    IsOpen="{x:Bind Post.Post.Listing.Locked}"
                    Message="The moderators of this subreddit has locked this post, you cannot submit new comments, vote or reply to this post."
                    Severity="Warning" />

                <Grid
                    MaxWidth="1200"
                    Margin="0,4"
                    Padding="6,10,8,10"
                    Background="{ThemeResource ExpanderContentBackground}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ColumnSpacing="10"
                    CornerRadius="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel
                        HorizontalAlignment="Center"
                        Orientation="Vertical"
                        Spacing="5">
                        <ToggleButton
                            Padding="3"
                            HorizontalAlignment="Center"
                            Click="UpvoteButton_Click"
                            IsChecked="{x:Bind Post.Upvoted, Mode=OneWay}"
                            Style="{StaticResource TransparentToggleButton}">
                            <FontIcon Glyph="&#xE010;" />

                            <ToggleButton.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                                </ResourceDictionary>
                            </ToggleButton.Resources>
                        </ToggleButton>
                        <TextBlock HorizontalAlignment="Center" Text="{x:Bind Post.VoteRatio, Mode=OneWay}" />
                        <ToggleButton
                            Padding="3"
                            HorizontalAlignment="Center"
                            Click="DownvoteButton_Click"
                            IsChecked="{x:Bind Post.Downvoted, Mode=OneWay}"
                            Style="{StaticResource TransparentToggleButton}">
                            <FontIcon Glyph="&#xE019;" />

                            <ToggleButton.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                                </ResourceDictionary>
                            </ToggleButton.Resources>
                        </ToggleButton>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <StackPanel
                            Margin="0,0,0,8"
                            Orientation="Horizontal"
                            Spacing="8"
                            Visibility="{x:Bind Post.Post.Listing.Stickied, Converter={StaticResource BoolToVis}}">
                            <FontIcon FontSize="12" Glyph="&#xE141;" />

                            <TextBlock Text="Pinned by moderators" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Spacing="2">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                <Run Text="By" /> <Hyperlink Click="UserHyperlink_Click">
                                    u/<Run Text="{x:Bind Post.Author}" />
                                </Hyperlink>
                            </TextBlock>

                            <Border
                                Margin="4"
                                Padding="8,2"
                                HorizontalAlignment="Left"
                                Background="ForestGreen"
                                CornerRadius="10"
                                Visibility="{x:Bind Post.IsModDistinguished, Converter={StaticResource BoolToVis}}">
                                <TextBlock Foreground="White" Text="MOD" />
                            </Border>

                            <Border
                                Margin="0,4"
                                Padding="8,2"
                                HorizontalAlignment="Left"
                                Background="OrangeRed"
                                CornerRadius="10"
                                Visibility="{x:Bind Post.IsAdminDistinguished, Converter={StaticResource BoolToVis}}">
                                <TextBlock Foreground="White" Text="A" />
                            </Border>

                            <Border
                                Padding="2"
                                CornerRadius="2"
                                Visibility="{x:Bind Post.ShouldDisplayUserFlair, Converter={StaticResource BoolToVis}}">
                                <TextBlock Text="{x:Bind Post.Post.Listing.AuthorFlairText}" />
                            </Border>

                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                - Posted
                                <Run d:Text="5 hours ago" Text="{x:Bind helpers:PostHelpers.GetRelativeDate(Post.Created, x:True)}" />
                                in
                                <Hyperlink Click="SubredditHyperlink_Click">
                                    <Run d:Text="r/Carpeddit" Text="{x:Bind Post.Post.Listing.SubredditNamePrefixed}" />
                                </Hyperlink>
                            </TextBlock>
                        </StackPanel>

                        <TextBlock
                            d:Text="Title"
                            Style="{StaticResource SubtitleTextBlockStyle}"
                            Text="{x:Bind Post.Title}"
                            TextWrapping="WrapWholeWords" />

                        <controls:WrapPanel HorizontalSpacing="8" Orientation="Horizontal">
                            <Border
                                Margin="0,4"
                                Padding="8,2"
                                HorizontalAlignment="Left"
                                Background="CornflowerBlue"
                                CornerRadius="10"
                                Visibility="{x:Bind Post.Post.Listing.IsOriginalContent, Converter={StaticResource BoolToVis}}">
                                <TextBlock Foreground="White" Text="OC" />
                            </Border>

                            <Border
                                Margin="-2,4,0,4"
                                Padding="8,2"
                                HorizontalAlignment="Left"
                                Background="IndianRed"
                                CornerRadius="10"
                                Visibility="{x:Bind Post.Post.NSFW, Converter={StaticResource BoolToVis}}">
                                <TextBlock Foreground="White" Text="NSFW" />
                            </Border>

                            <Border
                                Margin="-2,4,0,4"
                                Padding="8,2"
                                HorizontalAlignment="Left"
                                CornerRadius="10"
                                Visibility="{x:Bind Post.ShouldDisplayPostFlair, Converter={StaticResource BoolToVis}}">
                                <Border.Background>
                                    <SolidColorBrush Color="{x:Bind local1:App.GetColorFromHex(Post.Post.Listing.LinkFlairBackgroundColor)}" />
                                </Border.Background>
                                <TextBlock Text="{x:Bind Post.Post.Listing.LinkFlairText}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{x:Bind local1:App.GetTextColorFromHex(Post.Post.Listing.LinkFlairTextColor)}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Border>
                        </controls:WrapPanel>

                        <controls:MarkdownTextBlock
                            Margin="0,5,0,0"
                            d:Text="Description..."
                            Background="Transparent"
                            LinkClicked="MarkdownLinkClicked"
                            Text="{x:Bind Post.Description}"
                            TextWrapping="WrapWholeWords"
                            Visibility="{x:Bind Post.Post.Listing.IsSelf}" />

                        <Image
                            x:Name="ImagePost"
                            MaxWidth="500"
                            Margin="0,4,0,0"
                            Visibility="{x:Bind Post.HasImage, Converter={StaticResource BoolToVis}}">
                            <Image.Source>
                                <BitmapImage DecodePixelType="Logical" UriSource="{x:Bind Post.ImageUri}" />
                            </Image.Source>
                        </Image>

                        <MediaPlayerElement
                            Margin="0,4,0,0"
                            d:Visibility="Collapsed"
                            AreTransportControlsEnabled="True"
                            AutoPlay="False"
                            Source="{x:Bind Post.VideoSource}"
                            Visibility="{x:Bind Post.Post.Listing.IsVideo, Converter={StaticResource BoolToVis}}">
                            <MediaPlayerElement.TransportControls>
                                <MediaTransportControls
                                    IsCompact="True"
                                    IsPlaybackRateButtonVisible="True"
                                    IsPlaybackRateEnabled="True"
                                    IsZoomEnabled="True"
                                    IsZoomButtonVisible="True" />                                
                            </MediaPlayerElement.TransportControls>
                        </MediaPlayerElement>

                        <FlipView
                            MaxHeight="650"
                            Margin="0,4,0,0"
                            d:Visibility="Collapsed"
                            ItemsSource="{x:Bind Post.Images}"
                            Visibility="{x:Bind Post.IsGallery, Converter={StaticResource BoolToVis}}">
                            <FlipView.ItemTemplate>
                                <DataTemplate x:DataType="viewmodels:ImageViewModel">
                                    <Image Source="{x:Bind Model.Url}" />
                                </DataTemplate>
                            </FlipView.ItemTemplate>
                        </FlipView>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,10,0,3" Text="{x:Bind Post.CommentsCountInUI}" />

                            <Button
                                Margin="4,0,0,-6"
                                Padding="2"
                                Content="Share"
                                Foreground="{StaticResource SystemAccentColor}"
                                Style="{StaticResource TransparentButton}">
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="Share to">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE72D;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Click="CrossPostButton_Click" Text="Crosspost">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE72A;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Click="CopyLinkButton1_Click" Text="Copy link">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE16F;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>

                            <HyperlinkButton Margin="4,0,0,-6" Padding="2">
                                Save
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="RemoveUserPostButton_Click"
                                Visibility="{x:Bind Post.IsCurrentUserOP, Converter={StaticResource BoolToVis}}">
                                Delete
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="RemovePostButton_Click"
                                IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Removed)}"
                                Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}">
                                Remove
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="ApproveButton_Click"
                                IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Approved)}"
                                Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}">
                                Approve
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="SpamButton_Click"
                                IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Spam)}"
                                Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}">
                                Spam
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="PinButton_Click"
                                IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Stickied)}"
                                Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}">
                                Pin
                            </HyperlinkButton>

                            <HyperlinkButton
                                Margin="4,0,0,-6"
                                Padding="2"
                                Click="OnReportButtonClick">
                                Report
                            </HyperlinkButton>
                        </StackPanel>
                    </StackPanel>
                </Grid>

                <TextBlock
                    MaxWidth="1200"
                    Margin="0,5"
                    FontSize="16"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    Text="{x:Bind Post.CommentsCountInUI}"
                    TextWrapping="WrapWholeWords" />

                <StackPanel MaxWidth="1200" Spacing="8">
                    <RichEditBox
                        x:Name="CommentEditBox"
                        Height="100"
                        MaxHeight="600"
                        Margin="0,12,0,0"
                        AcceptsReturn="True"
                        IsEnabled="{x:Bind Post.NotArchivedOrLocked}"
                        PlaceholderText="Add a comment..."
                        SelectionFlyout="{x:Null}" />
                    <Button
                        Click="AddCommentButton_Click"
                        Content="Add"
                        IsEnabled="{x:Bind Post.NotArchivedOrLocked}"
                        Style="{ThemeResource AccentButtonStyle}" />
                </StackPanel>

                <Grid MaxWidth="1200" Margin="0,12,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>

                    <RelativePanel>
                        <TextBlock
                            FontWeight="SemiBold"
                            RelativePanel.AlignVerticalCenterWithPanel="True"
                            Text="Sort" />

                        <ComboBox
                            x:Name="SortCombo"
                            Margin="0,0,12,0"
                            RelativePanel.AlignRightWithPanel="True"
                            SelectedIndex="0">
                            <x:String>Top</x:String>
                            <x:String>Hot</x:String>
                            <x:String>New</x:String>
                            <x:String>Old</x:String>
                            <x:String>Rising</x:String>
                            <x:String>Controversial</x:String>
                            <x:String>QA</x:String>
                            <x:String>Random</x:String>
                        </ComboBox>
                    </RelativePanel>

                    <Button
                        Grid.Column="1"
                        Width="40"
                        Height="32"
                        Padding="4"
                        Click="RefreshButton_Click"
                        ToolTipService.ToolTip="Refresh">
                        <FontIcon FontSize="14" Glyph="&#xE72C;" />
                    </Button>
                </Grid>

                <muxc:ProgressRing x:Name="CommentProgress" IsActive="True" />

                <muxc:TreeView
                    x:Name="CommentsTree"
                    MaxWidth="1200"
                    Margin="0,12"
                    AllowDrop="False"
                    CanDragItems="False"
                    CanReorderItems="False"
                    SelectionMode="None">
                    <muxc:TreeView.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition IsStaggeringEnabled="False" />
                        </TransitionCollection>
                    </muxc:TreeView.ItemContainerTransitions>
                    <muxc:TreeView.ItemContainerStyle>
                        <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="muxc:TreeViewItem">
                            <Setter Property="Padding" Value="0" />
                            <Setter Property="Background" Value="{ThemeResource TreeViewItemBackground}" />
                            <Setter Property="BorderBrush" Value="{ThemeResource TreeViewItemBorderBrush}" />
                            <Setter Property="BorderThickness" Value="{ThemeResource TreeViewItemBorderThemeThickness}" />
                            <Setter Property="GlyphBrush" Value="{ThemeResource TreeViewItemForeground}" />
                            <Setter Property="MinHeight" Value="{ThemeResource TreeViewItemMinHeight}" />
                            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
                            <Setter Property="FocusVisualMargin" Value="0,-1,0,-1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="muxc:TreeViewItem">
                                        <Grid
                                            x:Name="ContentPresenterGrid"
                                            Margin="{ThemeResource TreeViewItemPresenterMargin}"
                                            Padding="{ThemeResource TreeViewItemPresenterPadding}"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="{TemplateBinding CornerRadius}">
                                            <Rectangle
                                                x:Name="SelectionIndicator"
                                                Width="3"
                                                Height="16"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Fill="{ThemeResource TreeViewItemSelectionIndicatorForeground}"
                                                Opacity="0"
                                                RadiusX="2"
                                                RadiusY="2"
                                                Visibility="Collapsed" />


                                            <Grid
                                                x:Name="MultiSelectGrid"
                                                Margin="{ThemeResource TreeViewItemMultiSelectSelectedItemBorderMargin}"
                                                Padding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.Indentation}"
                                                BorderBrush="Transparent"
                                                BorderThickness="{ThemeResource TreeViewItemBorderThemeThickness}"
                                                CornerRadius="{ThemeResource ControlCornerRadius}">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition Width="Auto" />
                                                    <ColumnDefinition />
                                                </Grid.ColumnDefinitions>

                                                <Grid Grid.Column="0">
                                                    <CheckBox
                                                        x:Name="MultiSelectCheckBox"
                                                        Width="32"
                                                        MinWidth="32"
                                                        MinHeight="{ThemeResource TreeViewItemMultiSelectCheckBoxMinHeight}"
                                                        Margin="10,0,0,0"
                                                        VerticalAlignment="Center"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        IsTabStop="False"
                                                        Visibility="Collapsed" />
                                                    <Border
                                                        x:Name="MultiArrangeOverlayTextBorder"
                                                        Height="20"
                                                        MinWidth="20"
                                                        HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                                                        BorderBrush="{ThemeResource SystemControlBackgroundChromeWhiteBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="{ThemeResource ControlCornerRadius}"
                                                        IsHitTestVisible="False"
                                                        Visibility="Collapsed">
                                                        <TextBlock
                                                            x:Name="MultiArrangeOverlayText"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            AutomationProperties.AccessibilityView="Raw"
                                                            Foreground="{ThemeResource SystemControlForegroundChromeWhiteBrush}"
                                                            IsHitTestVisible="False"
                                                            Style="{ThemeResource CaptionTextBlockStyle}"
                                                            Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.DragItemsCount}" />
                                                    </Border>
                                                </Grid>

                                                <Grid
                                                    x:Name="ExpandCollapseChevron"
                                                    Grid.Column="1"
                                                    Width="Auto"
                                                    Padding="14,0"
                                                    Background="Transparent"
                                                    Opacity="{TemplateBinding GlyphOpacity}"
                                                    Visibility="Collapsed">
                                                    <TextBlock
                                                        x:Name="CollapsedGlyph"
                                                        Width="12"
                                                        Height="12"
                                                        Padding="2"
                                                        VerticalAlignment="Center"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                        FontSize="{TemplateBinding GlyphSize}"
                                                        Foreground="{TemplateBinding GlyphBrush}"
                                                        IsHitTestVisible="False"
                                                        IsTextScaleFactorEnabled="False"
                                                        Text="{TemplateBinding CollapsedGlyph}"
                                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.CollapsedGlyphVisibility}" />
                                                    <TextBlock
                                                        x:Name="ExpandedGlyph"
                                                        Width="12"
                                                        Height="12"
                                                        Padding="2"
                                                        VerticalAlignment="Center"
                                                        AutomationProperties.AccessibilityView="Raw"
                                                        FontFamily="{StaticResource SymbolThemeFontFamily}"
                                                        FontSize="{TemplateBinding GlyphSize}"
                                                        Foreground="{TemplateBinding GlyphBrush}"
                                                        IsHitTestVisible="False"
                                                        IsTextScaleFactorEnabled="False"
                                                        Text="{TemplateBinding ExpandedGlyph}"
                                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TreeViewItemTemplateSettings.ExpandedGlyphVisibility}" />
                                                </Grid>

                                                <ContentPresenter
                                                    x:Name="ContentPresenter"
                                                    Grid.Column="2"
                                                    MinHeight="{ThemeResource TreeViewItemContentHeight}"
                                                    Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}" />
                                            </Grid>
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="PointerOver" />
                                                    <VisualState x:Name="Pressed" />
                                                    <VisualState x:Name="Selected" />
                                                    <VisualState x:Name="Disabled">
                                                        <VisualState.Setters>
                                                            <Setter Target="ContentPresenterGrid.Background" Value="{ThemeResource TreeViewItemBackgroundDisabled}" />
                                                            <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
                                                            <Setter Target="SelectionIndicator.Fill" Value="{ThemeResource TreeViewItemSelectionIndicatorForegroundDisabled}" />
                                                            <Setter Target="CollapsedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
                                                            <Setter Target="ExpandedGlyph.Foreground" Value="{ThemeResource TreeViewItemForegroundDisabled}" />
                                                            <Setter Target="ContentPresenterGrid.BorderBrush" Value="{ThemeResource TreeViewItemBorderBrushDisabled}" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="PointerOverSelected" />
                                                    <VisualState x:Name="PressedSelected" />
                                                    <VisualState x:Name="SelectedDisabled" />
                                                    <VisualState x:Name="ReorderedPlaceholder">
                                                        <Storyboard>
                                                            <FadeOutThemeAnimation TargetName="MultiSelectGrid" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="TreeViewMultiSelectStates">
                                                    <VisualState x:Name="TreeViewMultiSelectDisabled" />
                                                    <VisualState x:Name="TreeViewMultiSelectEnabledUnselected">
                                                        <VisualState.Setters>
                                                            <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                                                            <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                                                            <Setter Target="ContentPresenterGrid.Padding" Value="0" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                    <VisualState x:Name="TreeViewMultiSelectEnabledSelected">
                                                        <VisualState.Setters>
                                                            <Setter Target="MultiSelectCheckBox.Visibility" Value="Visible" />
                                                            <Setter Target="MultiSelectGrid.Background" Value="{ThemeResource TreeViewItemBackgroundSelected}" />
                                                            <Setter Target="MultiSelectGrid.BorderBrush" Value="{ThemeResource TreeViewItemMultiSelectBorderBrushSelected}" />
                                                            <Setter Target="ExpandCollapseChevron.Padding" Value="0,0,14,0" />
                                                            <Setter Target="ContentPresenterGrid.Padding" Value="0" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                                <VisualStateGroup x:Name="DragStates">
                                                    <VisualState x:Name="NotDragging" />
                                                    <VisualState x:Name="MultipleDraggingPrimary">
                                                        <VisualState.Setters>
                                                            <Setter Target="MultiSelectCheckBox.Opacity" Value="0" />
                                                            <Setter Target="MultiArrangeOverlayTextBorder.Visibility" Value="Visible" />
                                                        </VisualState.Setters>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </muxc:TreeView.ItemContainerStyle>

                    <muxc:TreeView.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:CommentViewModel">
                            <muxc:TreeViewItem IsExpanded="{x:Bind Collapsed, Mode=TwoWay, Converter={StaticResource InvertBoolConv}}" ItemsSource="{x:Bind Replies}">
                                <muxc:TreeViewItem.Content>
                                    <StackPanel>
                                        <Grid
                                            Padding="4"
                                            Background="{ThemeResource ExpanderContentBackground}"
                                            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                            BorderThickness="1"
                                            CornerRadius="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="30" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>

                                            <Border
                                                Width="1"
                                                Margin="0,12"
                                                Background="{StaticResource AppBarSeparatorForegroundThemeBrush}" />

                                            <StackPanel
                                                Grid.Column="1"
                                                Margin="0,8,12,8"
                                                HorizontalAlignment="Center"
                                                Spacing="4">
                                                <ToggleButton
                                                    Padding="3"
                                                    HorizontalAlignment="Center"
                                                    Click="CommentUpvoteButton_Click"
                                                    IsChecked="{x:Bind Upvoted, Mode=OneWay}"
                                                    Style="{StaticResource TransparentToggleButton}"
                                                    Tag="{x:Bind}">
                                                    <FontIcon Glyph="&#xE010;" />

                                                    <ToggleButton.Resources>
                                                        <ResourceDictionary>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                                                        </ResourceDictionary>
                                                    </ToggleButton.Resources>
                                                </ToggleButton>
                                                <TextBlock HorizontalAlignment="Center" Text="{x:Bind VoteRatio, Mode=OneWay}" />
                                                <ToggleButton
                                                    Padding="3"
                                                    HorizontalAlignment="Center"
                                                    Click="CommentDownvoteButton_Click"
                                                    IsChecked="{x:Bind Downvoted, Mode=OneWay}"
                                                    Style="{StaticResource TransparentToggleButton}"
                                                    Tag="{x:Bind}">
                                                    <FontIcon Glyph="&#xE011;" />

                                                    <ToggleButton.Resources>
                                                        <ResourceDictionary>
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                                                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                                                        </ResourceDictionary>
                                                    </ToggleButton.Resources>
                                                </ToggleButton>
                                            </StackPanel>

                                            <StackPanel Grid.Column="2" Spacing="5">
                                                <StackPanel
                                                    Orientation="Horizontal"
                                                    Spacing="8"
                                                    Visibility="{x:Bind OriginalComment.Listing.Stickied, Converter={StaticResource BoolToVis}}">
                                                    <FontIcon FontSize="12" Glyph="&#xE141;" />

                                                    <TextBlock Text="Pinned by moderators" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock VerticalAlignment="Center">
                                                        By
                                                        <Hyperlink>
                                                            u/<Run Text="{x:Bind OriginalComment.Author}" />
                                                        </Hyperlink>,
                                                        posted
                                                        <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(OriginalComment.Created, x:True)}" />
                                                    </TextBlock>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Content="OP"
                                                        IsHitTestVisible="False"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        Visibility="{x:Bind OriginalComment.Listing.IsSubmitter, Converter={StaticResource BoolToVis}}" />

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        CornerRadius="2"
                                                        Visibility="{x:Bind ShouldDisplayUserFlair, Converter={StaticResource BoolToVis}}">
                                                        <TextBlock Text="{x:Bind OriginalComment.Listing.AuthorFlairText}" />
                                                    </Button>

                                                    <Border
                                                        Margin="4"
                                                        Padding="8,2"
                                                        HorizontalAlignment="Left"
                                                        Background="OrangeRed"
                                                        CornerRadius="10"
                                                        Visibility="{x:Bind IsAdminDistinguished, Converter={StaticResource BoolToVis}}">
                                                        <TextBlock Foreground="White" Text="A" />
                                                    </Border>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        ToolTipService.ToolTip="Edited"
                                                        Visibility="{x:Bind OriginalComment.Listing.Edited, Converter={StaticResource BoolToVis}}">
                                                        <FontIcon FontSize="12" Glyph="&#xE104;" />
                                                    </Button>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        ToolTipService.ToolTip="Approved"
                                                        Visibility="{x:Bind OriginalComment.Listing.Approved, Converter={StaticResource BoolToVis}}">
                                                        <FontIcon FontSize="12" Glyph="&#xE73E;" />
                                                    </Button>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        ToolTipService.ToolTip="Marked as spam"
                                                        Visibility="{x:Bind OriginalComment.Listing.Spam, Converter={StaticResource BoolToVis}}">
                                                        <FontIcon FontSize="12" Glyph="&#xE73C;" />
                                                    </Button>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        ToolTipService.ToolTip="Removed"
                                                        Visibility="{x:Bind OriginalComment.Listing.Removed, Converter={StaticResource BoolToVis}}">
                                                        <FontIcon FontSize="12" Glyph="&#xE10A;" />
                                                    </Button>

                                                    <Button
                                                        Margin="4,0,0,0"
                                                        Padding="4,2"
                                                        Style="{StaticResource AccentButtonStyle}"
                                                        ToolTipService.ToolTip="Locked"
                                                        Visibility="{x:Bind OriginalComment.Listing.Locked, Converter={StaticResource BoolToVis}}">
                                                        <FontIcon FontSize="12" Glyph="&#xE72E;" />
                                                    </Button>
                                                </StackPanel>

                                                <controls:MarkdownTextBlock
                                                    Background="Transparent"
                                                    LinkClicked="MarkdownLinkClicked"
                                                    Text="{x:Bind OriginalComment.Body}" />

                                                <StackPanel
                                                    MaxWidth="1200"
                                                    Spacing="8"
                                                    Visibility="{x:Bind ShowReplyUI, Mode=OneWay, Converter={StaticResource BoolToVis}}">
                                                    <RichEditBox
                                                        x:Name="CommentEditBox"
                                                        Height="100"
                                                        MaxHeight="600"
                                                        Margin="0,12,0,0"
                                                        AcceptsReturn="True"
                                                        PlaceholderText="Add a reply..."
                                                        SelectionFlyout="{x:Null}" />
                                                    <Button
                                                        Click="ReplyCommentButton_Click"
                                                        Content="Send"
                                                        Style="{ThemeResource AccentButtonStyle}" />
                                                </StackPanel>

                                                <RelativePanel>
                                                    <StackPanel Margin="0,8,0,0" Orientation="Horizontal">
                                                        <HyperlinkButton
                                                            Padding="2"
                                                            Click="ReplyButton_Click"
                                                            Content="Reply"
                                                            IsEnabled="{x:Bind NotArchivedOrLocked}"
                                                            Visibility="{x:Bind ShowReplyUI, Mode=OneWay, Converter={StaticResource BoolToVisReverse}}" />
                                                        <HyperlinkButton
                                                            Padding="2"
                                                            Click="DeleteCommentButton_Click"
                                                            Content="Delete"
                                                            Visibility="{x:Bind IsCurrentUserOP, Converter={StaticResource BoolToVis}}" />
                                                        <HyperlinkButton
                                                            Margin="4,0,0,0"
                                                            Padding="2"
                                                            Click="RemoveCommentButton_Click"
                                                            Content="Remove"
                                                            Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" />
                                                    </StackPanel>

                                                    <Button
                                                        Margin="0,0,8,0"
                                                        Padding="5,2"
                                                        RelativePanel.AlignRightWithPanel="True"
                                                        Style="{StaticResource TransparentButton}">
                                                        <FontIcon Glyph="&#xE10C;" />

                                                        <Button.Flyout>
                                                            <MenuFlyout>
                                                                <MenuFlyoutItem Click="CopyLinkButton_Click" Text="Copy link">
                                                                    <MenuFlyoutItem.Icon>
                                                                        <FontIcon Glyph="&#xE16F;" />
                                                                    </MenuFlyoutItem.Icon>
                                                                </MenuFlyoutItem>

                                                                <MenuFlyoutItem
                                                                    Click="ApproveCommentItem_Click"
                                                                    Text="Approve comment"
                                                                    Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}">
                                                                    <MenuFlyoutItem.Icon>
                                                                        <FontIcon Glyph="&#xF16C;" />
                                                                    </MenuFlyoutItem.Icon>
                                                                </MenuFlyoutItem>

                                                                <ToggleMenuFlyoutItem
                                                                    Click="SpamComment_Click"
                                                                    IsChecked="{x:Bind OriginalComment.Listing.Spam}"
                                                                    Text="Mark comment as spam"
                                                                    Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}">
                                                                    <ToggleMenuFlyoutItem.Icon>
                                                                        <FontIcon Glyph="&#xE73C;" />
                                                                    </ToggleMenuFlyoutItem.Icon>
                                                                </ToggleMenuFlyoutItem>

                                                                <ToggleMenuFlyoutItem
                                                                    Click="LockCommentItem_Click"
                                                                    IsChecked="{x:Bind OriginalComment.Listing.Locked}"
                                                                    Text="Lock comment"
                                                                    Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}">
                                                                    <ToggleMenuFlyoutItem.Icon>
                                                                        <FontIcon Glyph="&#xE72E;" />
                                                                    </ToggleMenuFlyoutItem.Icon>
                                                                </ToggleMenuFlyoutItem>

                                                                <MenuFlyoutSubItem
                                                                    IsEnabled="{x:Bind IsCurrentUserOP}"
                                                                    Text="Distinguish"
                                                                    Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}">
                                                                    <MenuFlyoutSubItem.Icon>
                                                                        <FontIcon Glyph="&#xEA18;" />
                                                                    </MenuFlyoutSubItem.Icon>

                                                                    <MenuFlyoutSubItem.Items>
                                                                        <MenuFlyoutItem Click="RemoveDistinguish_Click" Text="Nothing">
                                                                            <MenuFlyoutItem.Icon>
                                                                                <FontIcon Glyph="&#xE10A;" />
                                                                            </MenuFlyoutItem.Icon>
                                                                        </MenuFlyoutItem>
                                                                        <MenuFlyoutItem Click="DistinguishAsModerator_Click" Text="Distinguish as moderator">
                                                                            <MenuFlyoutItem.Icon>
                                                                                <FontIcon Glyph="&#xEA18;" />
                                                                            </MenuFlyoutItem.Icon>
                                                                        </MenuFlyoutItem>
                                                                        <MenuFlyoutItem
                                                                            Click="PinCommentButton_Click"
                                                                            IsEnabled="{x:Bind IsTopLevel, Mode=OneWay}"
                                                                            Text="Distinguish as moderator and pin">
                                                                            <MenuFlyoutItem.Icon>
                                                                                <FontIcon Glyph="&#xE141;" />
                                                                            </MenuFlyoutItem.Icon>
                                                                        </MenuFlyoutItem>
                                                                    </MenuFlyoutSubItem.Items>
                                                                </MenuFlyoutSubItem>
                                                            </MenuFlyout>
                                                        </Button.Flyout>
                                                    </Button>
                                                </RelativePanel>
                                            </StackPanel>
                                        </Grid>

                                        <Button Margin="0,4" Visibility="{x:Bind CanLoadMore, Mode=OneWay, Converter={StaticResource BoolToVis}}">Load more</Button>
                                    </StackPanel>
                                </muxc:TreeViewItem.Content>
                            </muxc:TreeViewItem>
                        </DataTemplate>
                    </muxc:TreeView.ItemTemplate>
                </muxc:TreeView>
            </StackPanel>
        </ScrollViewer>

        <Button
            x:Name="BackButton"
            Width="40"
            Height="28"
            Margin="6,6,0,0"
            VerticalAlignment="Top"
            AutomationProperties.AutomationId="BackButton"
            AutomationProperties.ItemType="Navigation Button"
            AutomationProperties.Name="Back"
            Canvas.ZIndex="2"
            Click="BackButton_Click"
            CornerRadius="5"
            Style="{StaticResource TransparentButton}"
            Visibility="{x:Bind _isNotSeparate, Mode=OneWay, Converter={StaticResource BoolToVis}}">
            <muxc:AnimatedIcon
                x:Name="BackAnimatedIcon"
                Width="16"
                Height="16">
                <muxc:AnimatedIcon.Source>
                    <animatedvisuals:AnimatedBackVisualSource />
                </muxc:AnimatedIcon.Source>
                <muxc:AnimatedIcon.FallbackIconSource>
                    <muxc:SymbolIconSource Symbol="Back" />
                </muxc:AnimatedIcon.FallbackIconSource>
            </muxc:AnimatedIcon>
        </Button>

        <Frame
            x:Name="SecondPageFrame"
            Grid.Row="1"
            Grid.Column="1"
            Margin="-56,0,0,0" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MasterDetailEnabled">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="0.5*" />
                        <Setter Target="SecondPageFrame.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NormalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="0" />
                        <Setter Target="SecondPageFrame.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
