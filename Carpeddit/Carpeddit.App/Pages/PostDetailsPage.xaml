<Page
    x:Class="Carpeddit.App.Pages.PostDetailsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Carpeddit.App.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controllers="using:Carpeddit.App.Controllers"
    xmlns:converters="using:Carpeddit.App.Converters"
    xmlns:helpers="using:Carpeddit.App.Helpers"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:viewmodels="using:Carpeddit.App.ViewModels"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:templates="using:Carpeddit.App.Templates"
    xmlns:uc="using:Carpeddit.App.UserControls" xmlns:local1="using:Carpeddit.App" xmlns:redditthings="using:Reddit.Things"
    muxc:BackdropMaterial.ApplyToRootOrPageBackground="True"
    x:Name="RootPage">

    <Page.Resources>
        <converters:InvertBoolConverter x:Key="InvertBoolConv" />
    </Page.Resources>

    <Grid x:Name="MainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="0.5*" />
        </Grid.ColumnDefinitions>

        <Grid.Background>
            <SolidColorBrush x:Name="ColorBrushBg" Opacity="0.1" />
        </Grid.Background>

        <uc:CustomTitleBar Grid.ColumnSpan="2" Title="Post details" Visibility="{x:Bind _isNotSeparate, Mode=OneWay, Converter={StaticResource BoolToVis}}" />

        <ScrollViewer Grid.Row="1" Padding="66,0">
            <StackPanel>
                <muxc:InfoBar MaxWidth="1200" IsOpen="{x:Bind Post.Post.Listing.Removed}" IsClosable="False" Title="The moderators of this subreddit has removed this post." />

                <muxc:InfoBar MaxWidth="1200" IsOpen="{x:Bind Post.Post.Listing.Archived}" IsClosable="False" Title="This post has been archived" Severity="Warning" Message="You cannot submit new comments, vote or reply to this post." />

                <muxc:InfoBar MaxWidth="1200" IsOpen="{x:Bind Post.Post.Listing.Locked}" IsClosable="False" Title="This post has been locked" Severity="Warning" Message="The moderators of this subreddit has locked this post, you cannot submit new comments, vote or reply to this post." />

                <Grid
                    MaxWidth="1200"
                    Margin="0,4"
                    Padding="6,10,8,10"
                    Background="{ThemeResource ExpanderContentBackground}"
                    BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                    BorderThickness="1"
                    ColumnSpacing="10"
                    CornerRadius="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <StackPanel
                        HorizontalAlignment="Center"
                        Orientation="Vertical"
                        Spacing="5">
                        <ToggleButton
                            Padding="3"
                            HorizontalAlignment="Center"
                            Click="UpvoteButton_Click"
                            IsChecked="{x:Bind Post.Upvoted, Mode=OneWay}"
                            Style="{StaticResource TransparentToggleButton}">
                            <FontIcon Glyph="&#xE010;" />

                            <ToggleButton.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                                </ResourceDictionary>
                            </ToggleButton.Resources>
                        </ToggleButton>
                        <TextBlock
                            HorizontalAlignment="Center"
                            Text="{x:Bind Post.VoteRatio, Mode=OneWay}" />
                        <ToggleButton
                            Padding="3"
                            HorizontalAlignment="Center"
                            Click="DownvoteButton_Click"
                            IsChecked="{x:Bind Post.Downvoted, Mode=OneWay}"
                            Style="{StaticResource TransparentToggleButton}">
                            <FontIcon Glyph="&#xE019;" />

                            <ToggleButton.Resources>
                                <ResourceDictionary>
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                                    <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                                </ResourceDictionary>
                            </ToggleButton.Resources>
                        </ToggleButton>
                    </StackPanel>

                    <StackPanel Grid.Column="1" Orientation="Vertical">
                        <StackPanel Margin="0,0,0,8" Visibility="{x:Bind Post.Post.Listing.Stickied, Converter={StaticResource BoolToVis}}" Orientation="Horizontal" Spacing="8">
                            <FontIcon Glyph="&#xE141;" FontSize="12" />

                            <TextBlock Text="Pinned by moderators" />
                        </StackPanel>

                        <StackPanel Spacing="2" Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                                <Run Text="By" /> <Hyperlink Click="UserHyperlink_Click">u/<Run Text="{x:Bind Post.Author}" /></Hyperlink>
                            </TextBlock>

                            <Border Visibility="{x:Bind Post.IsModDistinguished, Converter={StaticResource BoolToVis}}" Background="ForestGreen" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="4">
                                <TextBlock Text="MOD" Foreground="White" />
                            </Border>

                            <Border Visibility="{x:Bind Post.IsAdminDistinguished, Converter={StaticResource BoolToVis}}" Background="OrangeRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                                <TextBlock Text="A" Foreground="White" />
                            </Border>

                            <Border Visibility="{x:Bind Post.ShouldDisplayUserFlair, Converter={StaticResource BoolToVis}}" Padding="2" CornerRadius="2">
                                <TextBlock Text="{x:Bind Post.Post.Listing.AuthorFlairText}" />
                            </Border>

                            <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">- Posted <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(Post.Created, x:True)}" d:Text="5 hours ago" /> in <Hyperlink Click="SubredditHyperlink_Click"><Run d:Text="r/Carpeddit" Text="{x:Bind Post.Post.Listing.SubredditNamePrefixed}" /></Hyperlink></TextBlock>
                        </StackPanel>

                        <TextBlock
                            Style="{StaticResource SubtitleTextBlockStyle}"
                            Text="{x:Bind Post.Title}"
                            d:Text="Title"
                            TextWrapping="WrapWholeWords" />

                        <controls:WrapPanel HorizontalSpacing="8" Orientation="Horizontal">
                            <Border Visibility="{x:Bind Post.Post.Listing.IsOriginalContent, Converter={StaticResource BoolToVis}}" Background="CornflowerBlue" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                                <TextBlock Text="OC" Foreground="White" />
                            </Border>

                            <Border Visibility="{x:Bind Post.Post.NSFW, Converter={StaticResource BoolToVis}}" Background="IndianRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                                <TextBlock Text="NSFW" Foreground="White" />
                            </Border>

                            <Border Visibility="{x:Bind Post.ShouldDisplayPostFlair, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                                <Border.Background>
                                    <SolidColorBrush Color="{x:Bind local1:App.GetColorFromHex(Post.Post.Listing.LinkFlairBackgroundColor)}" />
                                </Border.Background>
                                <TextBlock Text="{x:Bind Post.Post.Listing.LinkFlairText}">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="{x:Bind local1:App.GetTextColorFromHex(Post.Post.Listing.LinkFlairTextColor)}" />
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Border>
                        </controls:WrapPanel>

                        <controls:MarkdownTextBlock
                            Margin="0,5,0,0"
                            Background="Transparent"
                            Visibility="{x:Bind Post.Post.Listing.IsSelf}"
                            LinkClicked="MarkdownLinkClicked"
                            Text="{x:Bind Post.Description}"
                            d:Text="Description..."
                            TextWrapping="WrapWholeWords" />

                        <Image
                            x:Name="ImagePost"
                            MaxWidth="500"
                            Margin="0,4,0,0"
                            Visibility="{x:Bind Post.HasImage, Converter={StaticResource BoolToVis}}">
                            <Image.Source>
                                <BitmapImage DecodePixelType="Logical" UriSource="{x:Bind Post.ImageUri}" />
                            </Image.Source>
                        </Image>

                        <MediaPlayerElement 
                            Visibility="{x:Bind Post.Post.Listing.IsVideo, Converter={StaticResource BoolToVis}}"
                            Source="{x:Bind Post.VideoSource}"
                            AutoPlay="False"
                            Margin="0,4,0,0"
                            d:Visibility="Collapsed"
                            AreTransportControlsEnabled="True" />

                        <FlipView
                            Margin="0,4,0,0"
                            MaxHeight="650"
                            Visibility="{x:Bind Post.IsGallery, Converter={StaticResource BoolToVis}}"
                            ItemsSource="{x:Bind Post.Images}"
                            d:Visibility="Collapsed">
                            <FlipView.ItemTemplate>
                                <DataTemplate x:DataType="redditthings:Image">
                                    <Image Source="{x:Bind Url}" />
                                </DataTemplate>
                            </FlipView.ItemTemplate>
                        </FlipView>

                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,10,0,3" Text="{x:Bind Post.CommentsCountInUI}" />

                            <Button Style="{StaticResource TransparentButton}" Foreground="{StaticResource SystemAccentColor}" Content="Share" Margin="4,0,0,-6" Padding="2">
                                <Button.Flyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem Text="Share to">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE72D;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Text="Crosspost" Click="CrossPostButton_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE72A;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>

                                        <MenuFlyoutItem Text="Copy link" Click="CopyLinkButton1_Click">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Glyph="&#xE16F;" />
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>

                            <HyperlinkButton Margin="4,0,0,-6" Padding="2">
                                Save
                            </HyperlinkButton>

                            <HyperlinkButton Visibility="{x:Bind Post.IsCurrentUserOP, Converter={StaticResource BoolToVis}}" Click="RemoveUserPostButton_Click" Margin="4,0,0,-6" Padding="2">
                                Delete
                            </HyperlinkButton>

                            <HyperlinkButton IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Removed)}" Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}" Click="RemovePostButton_Click" Margin="4,0,0,-6" Padding="2">
                                Remove
                            </HyperlinkButton>

                            <HyperlinkButton IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Approved)}" Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}" Click="ApproveButton_Click" Margin="4,0,0,-6" Padding="2">
                                Approve
                            </HyperlinkButton>

                            <HyperlinkButton IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Spam)}" Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}" Click="SpamButton_Click" Margin="4,0,0,-6" Padding="2">
                                Spam
                            </HyperlinkButton>

                            <HyperlinkButton IsEnabled="{x:Bind local1:App.OppositeOf(Post.Post.Listing.Stickied)}" Visibility="{Binding Subreddit.SubredditData.UserIsModerator, ElementName=RootPage, Converter={StaticResource BoolToVis}}" Click="PinButton_Click" Margin="4,0,0,-6" Padding="2">
                                Pin
                            </HyperlinkButton>

                            <HyperlinkButton Margin="4,0,0,-6" Padding="2" Click="OnReportButtonClick">
                                Report
                            </HyperlinkButton>
                        </StackPanel>
                    </StackPanel>
                </Grid>

                <TextBlock Style="{StaticResource SubtitleTextBlockStyle}" MaxWidth="1200" FontSize="16" Text="{x:Bind Post.CommentsCountInUI}" TextWrapping="WrapWholeWords" Margin="0,5" />

                <StackPanel Spacing="8" MaxWidth="1200">
                    <RichEditBox IsEnabled="{x:Bind Post.NotArchivedOrLocked}" SelectionFlyout="{x:Null}" Height="100" AcceptsReturn="True" MaxHeight="600" Margin="0,12,0,0" PlaceholderText="Add a comment..." x:Name="CommentEditBox" />
                    <Button IsEnabled="{x:Bind Post.NotArchivedOrLocked}" Click="AddCommentButton_Click" Style="{ThemeResource AccentButtonStyle}" Content="Add" />
                </StackPanel>

                <Grid MaxWidth="1200" Margin="0,12,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="50" />
                    </Grid.ColumnDefinitions>

                    <RelativePanel>
                        <TextBlock
                            RelativePanel.AlignVerticalCenterWithPanel="True"
                            FontWeight="SemiBold"
                            Text="Sort" />

                        <ComboBox
                            x:Name="SortCombo"
                            Margin="0,0,12,0"
                            RelativePanel.AlignRightWithPanel="True"
                            SelectedIndex="0">
                            <x:String>Top</x:String>
                            <x:String>Hot</x:String>
                            <x:String>New</x:String>
                            <x:String>Old</x:String>
                            <x:String>Rising</x:String>
                            <x:String>Controversial</x:String>
                            <x:String>QA</x:String>
                            <x:String>Random</x:String>
                        </ComboBox>
                    </RelativePanel>

                    <Button Width="40" Height="32" Padding="4" Grid.Column="1" ToolTipService.ToolTip="Refresh" Click="RefreshButton_Click">
                        <FontIcon Glyph="&#xE72C;" FontSize="14" />
                    </Button>
                </Grid>

                <muxc:ProgressRing IsActive="True" x:Name="CommentProgress" />

                <muxc:TreeView SelectionMode="None" AllowDrop="False" CanDragItems="False" CanReorderItems="False" x:Name="CommentsTree" MaxWidth="1200" Margin="0,12">
                    <muxc:TreeView.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition IsStaggeringEnabled="False" />
                        </TransitionCollection>
                    </muxc:TreeView.ItemContainerTransitions>
                    <muxc:TreeView.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.ThemeDictionaries>
                                <ResourceDictionary x:Key="Default">
                                    <SolidColorBrush x:Key="TreeViewItemBackgroundPointerOver">Transparent</SolidColorBrush>
                                </ResourceDictionary>
                            </ResourceDictionary.ThemeDictionaries>
                        </ResourceDictionary>
                    </muxc:TreeView.Resources>
                    
                    <muxc:TreeView.ItemTemplate>
                        <DataTemplate x:DataType="viewmodels:CommentViewModel">
                            <muxc:TreeViewItem IsExpanded="{x:Bind Collapsed, Mode=TwoWay, Converter={StaticResource InvertBoolConv}}" ItemsSource="{x:Bind Replies}">
                                <muxc:TreeViewItem.Content>
                                    <Grid 
                                        Background="{ThemeResource ExpanderContentBackground}"
                                        BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
                                        BorderThickness="1"
                                        CornerRadius="4"
                                        Margin="{x:Bind Thickn}"
                                        Padding="4">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <Border Width="1" Margin="0,12" Background="{StaticResource AppBarSeparatorForegroundThemeBrush}" />

                                        <StackPanel 
                                            HorizontalAlignment="Center"
                                            Grid.Column="1"
                                            Spacing="4"
                                            Margin="0,8,12,8">
                                            <ToggleButton 
                                                Padding="3"
                                                Style="{StaticResource TransparentToggleButton}"
                                                Click="CommentUpvoteButton_Click"
                                                HorizontalAlignment="Center"
                                                Tag="{x:Bind}"
                                                IsChecked="{x:Bind Upvoted, Mode=OneWay}">
                                                <FontIcon Glyph="&#xE010;" />

                                                <ToggleButton.Resources>
                                                    <ResourceDictionary>
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                                                    </ResourceDictionary>
                                                </ToggleButton.Resources>
                                            </ToggleButton>
                                            <TextBlock HorizontalAlignment="Center" Text="{x:Bind VoteRatio, Mode=OneWay}" />
                                            <ToggleButton
                                                Padding="3"
                                                Style="{StaticResource TransparentToggleButton}"
                                                Click="CommentDownvoteButton_Click"
                                                Tag="{x:Bind}"
                                                HorizontalAlignment="Center"
                                                IsChecked="{x:Bind Downvoted, Mode=OneWay}">
                                                <FontIcon Glyph="&#xE011;" />

                                                <ToggleButton.Resources>
                                                    <ResourceDictionary>
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                                                        <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                                                    </ResourceDictionary>
                                                </ToggleButton.Resources>
                                            </ToggleButton>
                                        </StackPanel>

                                        <StackPanel Grid.Column="2" Spacing="5">
                                            <StackPanel Visibility="{x:Bind OriginalComment.Listing.Stickied, Converter={StaticResource BoolToVis}}" Orientation="Horizontal" Spacing="8">
                                                <FontIcon Glyph="&#xE141;" FontSize="12" />

                                                <TextBlock Text="Pinned by moderators" />
                                            </StackPanel>

                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock VerticalAlignment="Center">
                                                    By <Hyperlink>u/<Run Text="{x:Bind OriginalComment.Author}" /></Hyperlink>, posted <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(OriginalComment.Created, x:True)}" />
                                                </TextBlock>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.IsSubmitter, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Content="OP" Padding="4,2" Margin="4,0,0,0" IsHitTestVisible="False" />
                                                
                                                <Button Visibility="{x:Bind ShouldDisplayUserFlair, Converter={StaticResource BoolToVis}}" Padding="4,2" Margin="4,0,0,0" CornerRadius="2">
                                                    <TextBlock Text="{x:Bind OriginalComment.Listing.AuthorFlairText}" />
                                                </Button>

                                                <Border Visibility="{x:Bind IsAdminDistinguished, Converter={StaticResource BoolToVis}}" Background="OrangeRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="4">
                                                    <TextBlock Text="A" Foreground="White" />
                                                </Border>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.Edited, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Padding="4,2" Margin="4,0,0,0" ToolTipService.ToolTip="Edited">
                                                    <FontIcon FontSize="12" Glyph="&#xE104;" />
                                                </Button>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.Approved, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Padding="4,2" Margin="4,0,0,0" ToolTipService.ToolTip="Approved">
                                                    <FontIcon FontSize="12" Glyph="&#xE73E;" />
                                                </Button>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.Spam, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Padding="4,2" Margin="4,0,0,0" ToolTipService.ToolTip="Marked as spam">
                                                    <FontIcon FontSize="12" Glyph="&#xE73C;" />
                                                </Button>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.Removed, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Padding="4,2" Margin="4,0,0,0" ToolTipService.ToolTip="Removed">
                                                    <FontIcon FontSize="12" Glyph="&#xE10A;" />
                                                </Button>

                                                <Button Visibility="{x:Bind OriginalComment.Listing.Locked, Converter={StaticResource BoolToVis}}" Style="{StaticResource AccentButtonStyle}" Padding="4,2" Margin="4,0,0,0" ToolTipService.ToolTip="Locked">
                                                    <FontIcon FontSize="12" Glyph="&#xE72E;" />
                                                </Button>
                                            </StackPanel>
                                            
                                            <controls:MarkdownTextBlock Background="Transparent" Text="{x:Bind OriginalComment.Body}" LinkClicked="MarkdownLinkClicked" />

                                            <StackPanel Spacing="8" MaxWidth="1200" Visibility="{x:Bind ShowReplyUI, Mode=OneWay, Converter={StaticResource BoolToVis}}">
                                                <RichEditBox SelectionFlyout="{x:Null}" Height="100" AcceptsReturn="True" MaxHeight="600" Margin="0,12,0,0" PlaceholderText="Add a reply..." x:Name="CommentEditBox" />
                                                <Button Click="ReplyCommentButton_Click" Style="{ThemeResource AccentButtonStyle}" Content="Send" />
                                            </StackPanel>

                                            <RelativePanel>
                                                <StackPanel Orientation="Horizontal" Margin="0,8,0,0">
                                                    <HyperlinkButton Visibility="{x:Bind ShowReplyUI, Mode=OneWay, Converter={StaticResource BoolToVisReverse}}" IsEnabled="{x:Bind NotArchivedOrLocked}" Click="ReplyButton_Click" Padding="2" Content="Reply" />
                                                    <HyperlinkButton Visibility="{x:Bind IsCurrentUserOP, Converter={StaticResource BoolToVis}}" Click="DeleteCommentButton_Click" Padding="2" Content="Delete" />
                                                    <HyperlinkButton Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" Click="RemoveCommentButton_Click" Margin="4,0,0,0" Padding="2" Content="Remove" />
                                                </StackPanel>

                                                <Button RelativePanel.AlignRightWithPanel="True" Style="{StaticResource TransparentButton}" Padding="5,2" Margin="0,0,8,0">
                                                    <FontIcon Glyph="&#xE10C;" />

                                                    <Button.Flyout>
                                                        <MenuFlyout>
                                                            <MenuFlyoutItem Text="Copy link" Click="CopyLinkButton_Click">
                                                                <MenuFlyoutItem.Icon>
                                                                    <FontIcon Glyph="&#xE16F;" />
                                                                </MenuFlyoutItem.Icon>
                                                            </MenuFlyoutItem>

                                                            <MenuFlyoutItem Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" Text="Approve comment" Click="ApproveCommentItem_Click">
                                                                <MenuFlyoutItem.Icon>
                                                                    <FontIcon Glyph="&#xF16C;" />
                                                                </MenuFlyoutItem.Icon>
                                                            </MenuFlyoutItem>

                                                            <ToggleMenuFlyoutItem Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" IsChecked="{x:Bind OriginalComment.Listing.Spam}" Text="Mark comment as spam" Click="SpamComment_Click">
                                                                <ToggleMenuFlyoutItem.Icon>
                                                                    <FontIcon Glyph="&#xE73C;" />
                                                                </ToggleMenuFlyoutItem.Icon>
                                                            </ToggleMenuFlyoutItem>

                                                            <ToggleMenuFlyoutItem Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" IsChecked="{x:Bind OriginalComment.Listing.Locked}" Text="Lock comment" Click="LockCommentItem_Click">
                                                                <ToggleMenuFlyoutItem.Icon>
                                                                    <FontIcon Glyph="&#xE72E;" />
                                                                </ToggleMenuFlyoutItem.Icon>
                                                            </ToggleMenuFlyoutItem>

                                                            <MenuFlyoutSubItem IsEnabled="{x:Bind IsCurrentUserOP}" Visibility="{x:Bind IsCurrentUserMod, Converter={StaticResource BoolToVis}}" Text="Distinguish">
                                                                <MenuFlyoutSubItem.Icon>
                                                                    <FontIcon Glyph="&#xEA18;" />
                                                                </MenuFlyoutSubItem.Icon>

                                                                <MenuFlyoutSubItem.Items>
                                                                    <MenuFlyoutItem Text="Nothing" Click="RemoveDistinguish_Click">
                                                                        <MenuFlyoutItem.Icon>
                                                                            <FontIcon Glyph="&#xE10A;" />
                                                                        </MenuFlyoutItem.Icon>
                                                                    </MenuFlyoutItem>
                                                                    <MenuFlyoutItem Text="Distinguish as moderator" Click="DistinguishAsModerator_Click">
                                                                        <MenuFlyoutItem.Icon>
                                                                            <FontIcon Glyph="&#xEA18;" />
                                                                        </MenuFlyoutItem.Icon>
                                                                    </MenuFlyoutItem>
                                                                    <MenuFlyoutItem IsEnabled="{x:Bind IsTopLevel, Mode=OneWay}" Text="Distinguish as moderator and pin" Click="PinCommentButton_Click">
                                                                        <MenuFlyoutItem.Icon>
                                                                            <FontIcon Glyph="&#xE141;" />
                                                                        </MenuFlyoutItem.Icon>
                                                                    </MenuFlyoutItem>
                                                                </MenuFlyoutSubItem.Items>
                                                            </MenuFlyoutSubItem>
                                                        </MenuFlyout>
                                                    </Button.Flyout>
                                                </Button>
                                            </RelativePanel>
                                        </StackPanel>
                                    </Grid>
                                </muxc:TreeViewItem.Content>
                            </muxc:TreeViewItem>
                        </DataTemplate>
                    </muxc:TreeView.ItemTemplate>
                </muxc:TreeView>
            </StackPanel>
        </ScrollViewer>

        <Button VerticalAlignment="Top" x:Name="BackButton"
                CornerRadius="5"
                Height="28"
                Margin="6,6,0,0"
                Canvas.ZIndex="2"
                Click="BackButton_Click"
                Style="{StaticResource TransparentButton}"
                Width="40"
                Visibility="{x:Bind _isNotSeparate, Mode=OneWay, Converter={StaticResource BoolToVis}}"
                AutomationProperties.Name="Back"
                AutomationProperties.AutomationId="BackButton"
                AutomationProperties.ItemType="Navigation Button">
            <muxc:AnimatedIcon x:Name="BackAnimatedIcon" Height="16" Width="16">
                <muxc:AnimatedIcon.Source>
                    <animatedvisuals:AnimatedBackVisualSource/>
                </muxc:AnimatedIcon.Source>
                <muxc:AnimatedIcon.FallbackIconSource>
                    <muxc:SymbolIconSource Symbol="Back"/>
                </muxc:AnimatedIcon.FallbackIconSource>
            </muxc:AnimatedIcon>
        </Button>

        <Frame x:Name="SecondPageFrame" Margin="-56,0,0,0" Grid.Column="1" Grid.Row="1" />

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="MasterDetailEnabled">
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="0.5*" />
                        <Setter Target="SecondPageFrame.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="NormalState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>

                    <VisualState.Setters>
                        <Setter Target="MainGrid.ColumnDefinitions[1].Width" Value="0" />
                        <Setter Target="SecondPageFrame.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
