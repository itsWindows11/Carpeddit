<ResourceDictionary
    x:Class="Carpeddit.App.Templates.PostTemplates"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:helpers="using:Carpeddit.App.Helpers"
    xmlns:local="using:Carpeddit.App"
    xmlns:models="using:Carpeddit.App.Models"
    xmlns:templates="using:Carpeddit.App.Templates"
    xmlns:redditthings="using:Reddit.Things">

    <DataTemplate x:Key="PlainPostTemplate" x:DataType="models:PostViewModel">
        <Grid
            MaxWidth="1200"
            Margin="0,4"
            Padding="6,10,8,10"
            Background="{ThemeResource ExpanderContentBackground}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            ColumnSpacing="10"
            CornerRadius="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel
                HorizontalAlignment="Center"
                Orientation="Vertical"
                Spacing="5">
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="UpvoteButton_Click"
                    IsChecked="{x:Bind Upvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE010;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
                <TextBlock
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Text="{x:Bind VoteRatio, Mode=OneWay}" />
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="DownvoteButton_Click"
                    IsChecked="{x:Bind Downvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE019;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical">
                <TextBlock TextWrapping="WrapWholeWords">
                    <Run Text="By" /> <Hyperlink Click="UserHyperlink_Click">u/<Run Text="{x:Bind Author}" /></Hyperlink> - Posted <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(Post.Created, x:True)}" /> in <Hyperlink Click="SubredditHyperlink_Click">r/<Run Text="{x:Bind Subreddit}" /></Hyperlink>
                </TextBlock>

                <TextBlock
                    x:Phase="2"
                    PointerReleased="Title_PointerReleased"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    Tag="{x:Bind}"
                    Text="{x:Bind Title}"
                    TextWrapping="WrapWholeWords" />

                <controls:WrapPanel HorizontalSpacing="8">
                    <Border Visibility="{x:Bind ShouldDisplayPostFlair, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <Border.Background>
                            <SolidColorBrush Color="{x:Bind local:App.GetColorFromHex(Post.Listing.LinkFlairBackgroundColor)}" />
                        </Border.Background>
                        <TextBlock Text="{x:Bind Post.Listing.LinkFlairText}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{x:Bind local:App.GetTextColorFromHex(Post.Listing.LinkFlairTextColor)}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </Border>

                    <Border Visibility="{x:Bind Post.Listing.IsOriginalContent, Converter={StaticResource BoolToVis}}" Background="CornflowerBlue" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="OC" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind IsModDistinguished, Converter={StaticResource BoolToVis}}" Background="ForestGreen" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="MOD" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind IsAdminDistinguished, Converter={StaticResource BoolToVis}}" Background="OrangeRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="A" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind Post.NSFW, Converter={StaticResource BoolToVis}}" Background="IndianRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="NSFW" Foreground="White" />
                    </Border>
                </controls:WrapPanel>

                <controls:MarkdownTextBlock
                    Margin="0,4,0,0"
                    x:Phase="1"
                    Background="Transparent"
                    Visibility="{x:Bind Post.Listing.IsSelf}"
                    LinkClicked="MarkdownLinkClicked"
                    Text="{x:Bind ShortDescription}"
                    TextWrapping="WrapWholeWords" />

                <Image
                    x:Name="ImagePost"
                    MaxWidth="500"
                    Margin="0,4,0,0"
                    x:Load="{x:Bind HasImage}">
                    <Image.Source>
                        <BitmapImage DecodePixelType="Logical" UriSource="{x:Bind ImageUri}" />
                    </Image.Source>
                </Image>

                <MediaPlayerElement 
                    x:Name="MediaRedditPlayer"
                    x:Load="{x:Bind Post.Listing.IsVideo}"
                    Source="{x:Bind VideoSource}"
                    AutoPlay="False"
                    Margin="0,4,0,0"
                    AreTransportControlsEnabled="True" />

                <FlipView 
                    x:Name="Flip"
                    Margin="0,4,0,0"
                    MaxHeight="650"
                    x:Load="{x:Bind IsGallery}"
                    ItemsSource="{x:Bind Images}">
                    <FlipView.ItemTemplate>
                        <DataTemplate x:DataType="redditthings:Image">
                            <Image Source="{x:Bind Url}" />
                        </DataTemplate>
                    </FlipView.ItemTemplate>
                </FlipView>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,10,0,3" Text="{x:Bind CommentsCountInUI}" />

                    <Button Style="{StaticResource TransparentButton}" Foreground="{StaticResource SystemAccentColor}" Content="Share" Margin="4,0,0,-6" Padding="2">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Share to">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Crosspost" Click="CrossPostButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Copy link" Click="CopyLinkButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE16F;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2">
                        Save
                    </HyperlinkButton>

                    <HyperlinkButton Visibility="{x:Bind IsCurrentUserOP, Converter={StaticResource BoolToVis}}" Click="RemoveUserPostButton_Click" Margin="4,0,0,-6" Padding="2">
                        Delete
                    </HyperlinkButton>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2" Click="OnReportButtonClick">
                        Report
                    </HyperlinkButton>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="UserPostTemplate" x:DataType="models:PostViewModel">
        <Grid
            MaxWidth="1200"
            Margin="0,4"
            Padding="6,10,8,10"
            Background="{ThemeResource ExpanderContentBackground}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            ColumnSpacing="10"
            CornerRadius="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel
                HorizontalAlignment="Center"
                Orientation="Vertical"
                Spacing="5">
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="UpvoteButton_Click"
                    IsChecked="{x:Bind Upvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE010;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
                <TextBlock
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Text="{x:Bind VoteRatio, Mode=OneWay}" />
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="DownvoteButton_Click"
                    IsChecked="{x:Bind Downvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE019;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical">
                <controls:WrapPanel HorizontalSpacing="8">
                    <TextBlock TextWrapping="WrapWholeWords">
                        <Run Text="By" /> <Hyperlink Click="UserHyperlink_Click">u/<Run Text="{x:Bind Author}" /></Hyperlink>
                    </TextBlock>

                    <Border Visibility="{x:Bind IsModDistinguished, Converter={StaticResource BoolToVis}}" Background="ForestGreen" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2">
                        <TextBlock Text="MOD" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind IsAdminDistinguished, Converter={StaticResource BoolToVis}}" Background="OrangeRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2">
                        <TextBlock Text="A" Foreground="White" />
                    </Border>

                    <TextBlock>
                        - Posted <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(Post.Created, x:True)}" /> in <Hyperlink Click="SubredditHyperlink_Click">r/<Run Text="{x:Bind Subreddit}" /></Hyperlink>
                    </TextBlock>
                </controls:WrapPanel>

                <TextBlock
                    x:Phase="2"
                    PointerReleased="Title_PointerReleased"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    Visibility="{x:Bind Post.Listing.IsSelf}"
                    Tag="{x:Bind}"
                    Text="{x:Bind Title}"
                    TextWrapping="WrapWholeWords" />

                <StackPanel Spacing="8" Orientation="Horizontal">
                    <Border Visibility="{x:Bind ShouldDisplayPostFlair, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                        <Border.Background>
                            <SolidColorBrush Color="{x:Bind local:App.GetColorFromHex(Post.Listing.LinkFlairBackgroundColor)}" />
                        </Border.Background>
                        <TextBlock Text="{x:Bind Post.Listing.LinkFlairText}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{x:Bind local:App.GetTextColorFromHex(Post.Listing.LinkFlairTextColor)}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </Border>

                    <Border Visibility="{x:Bind Post.NSFW, Converter={StaticResource BoolToVis}}" Background="IndianRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                        <TextBlock Text="NSFW" Foreground="White" />
                    </Border>
                </StackPanel>

                <controls:MarkdownTextBlock
                    Margin="0,5,0,0"
                    x:Phase="1"
                    Background="Transparent"
                    LinkClicked="MarkdownLinkClicked"
                    Text="{x:Bind ShortDescription}"
                    TextWrapping="WrapWholeWords" />

                <Image
                    x:Name="ImagePost"
                    MaxWidth="500"
                    Margin="0,4,0,0"
                    x:Load="{x:Bind HasImage}">
                    <Image.Source>
                        <BitmapImage DecodePixelType="Logical" UriSource="{x:Bind ImageUri}" />
                    </Image.Source>
                </Image>

                <MediaPlayerElement 
                    x:Name="MediaRedditPlayer"
                    x:Load="{x:Bind Post.Listing.IsVideo}"
                    Source="{x:Bind VideoSource}"
                    AutoPlay="False"
                    Margin="0,4,0,0"
                    AreTransportControlsEnabled="True" />

                <FlipView 
                    x:Name="Flip"
                    Margin="0,4,0,0"
                    MaxHeight="650"
                    x:Load="{x:Bind IsGallery}"
                    ItemsSource="{x:Bind Images}">
                    <FlipView.ItemTemplate>
                        <DataTemplate x:DataType="redditthings:Image">
                            <Image Source="{x:Bind Url}" />
                        </DataTemplate>
                    </FlipView.ItemTemplate>
                </FlipView>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,10,0,3" Text="{x:Bind CommentsCountInUI}" />

                    <Button Style="{StaticResource TransparentButton}" Foreground="{StaticResource SystemAccentColor}" Content="Share" Margin="4,0,0,-6" Padding="2">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Share to">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Crosspost" Click="CrossPostButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Copy link" Click="CopyLinkButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE16F;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2">
                        Save
                    </HyperlinkButton>

                    <HyperlinkButton Visibility="{x:Bind IsCurrentUserOP, Converter={StaticResource BoolToVis}}" Click="RemoveUserPostButton_Click" Margin="4,0,0,-6" Padding="2">
                        Delete
                    </HyperlinkButton>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2" Click="OnReportButtonClick">
                        Report
                    </HyperlinkButton>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="SubredditPostTemplate" x:DataType="models:PostViewModel">
        <Grid
            MaxWidth="1200"
            Margin="0,4"
            Padding="6,10,8,10"
            Background="{ThemeResource ExpanderContentBackground}"
            BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}"
            BorderThickness="1"
            ColumnSpacing="10"
            CornerRadius="6">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <StackPanel
                HorizontalAlignment="Center"
                Orientation="Vertical"
                Spacing="5">
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="UpvoteButton_Click"
                    IsChecked="{x:Bind Upvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE010;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#ff4500" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#ff6e38" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#f77d4f" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
                <TextBlock
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Text="{x:Bind VoteRatio, Mode=OneWay}" />
                <ToggleButton
                    Padding="3"
                    HorizontalAlignment="Center"
                    x:Phase="3"
                    Click="DownvoteButton_Click"
                    IsChecked="{x:Bind Downvoted, Mode=OneWay}"
                    Style="{StaticResource TransparentToggleButton}"
                    Tag="{x:Bind}">
                    <FontIcon Glyph="&#xE019;" />

                    <ToggleButton.Resources>
                        <ResourceDictionary>
                            <SolidColorBrush x:Key="ToggleButtonBackgroundChecked" Color="#7193ff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPointerOver" Color="#96afff" />
                            <SolidColorBrush x:Key="ToggleButtonBackgroundCheckedPressed" Color="#b6c7fc" />
                        </ResourceDictionary>
                    </ToggleButton.Resources>
                </ToggleButton>
            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical">
                <StackPanel Margin="0,0,0,8" Visibility="{x:Bind Post.Listing.Stickied, Converter={StaticResource BoolToVis}}" Orientation="Horizontal" Spacing="8">
                    <FontIcon Glyph="&#xE141;" FontSize="12" />

                    <TextBlock Text="Pinned by moderators" />
                </StackPanel>

                <StackPanel Spacing="2" Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">
                        <Run Text="By" /> <Hyperlink Click="UserHyperlink_Click">u/<Run Text="{x:Bind Author}" /></Hyperlink>
                    </TextBlock>

                    <Border Visibility="{x:Bind IsModDistinguished, Converter={StaticResource BoolToVis}}" Background="ForestGreen" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="MOD" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind IsAdminDistinguished, Converter={StaticResource BoolToVis}}" Background="OrangeRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="A" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind ShouldDisplayUserFlair, Converter={StaticResource BoolToVis}}" Padding="2" CornerRadius="2">
                        <TextBlock Text="{x:Bind Post.Listing.AuthorFlairText}" />
                    </Border>

                    <TextBlock VerticalAlignment="Center" TextWrapping="WrapWholeWords">- Posted <Run Text="{x:Bind helpers:PostHelpers.GetRelativeDate(Post.Created, x:True)}" /></TextBlock>
                </StackPanel>

                <TextBlock
                    x:Phase="2"
                    PointerReleased="Title_PointerReleased"
                    Style="{StaticResource SubtitleTextBlockStyle}"
                    Tag="{x:Bind}"
                    Text="{x:Bind Title}"
                    TextWrapping="WrapWholeWords" />

                <controls:WrapPanel HorizontalSpacing="8" Orientation="Horizontal">
                    <Border Visibility="{x:Bind Post.Listing.IsOriginalContent, Converter={StaticResource BoolToVis}}" Background="CornflowerBlue" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="0,4">
                        <TextBlock Text="OC" Foreground="White" />
                    </Border>

                    <Border Visibility="{x:Bind Post.NSFW, Converter={StaticResource BoolToVis}}" Background="IndianRed" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                        <TextBlock Text="NSFW" Foreground="White" />
                    </Border>
                    
                    <Border Visibility="{x:Bind ShouldDisplayPostFlair, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" CornerRadius="10" Padding="8,2" Margin="-2,4,0,4">
                        <Border.Background>
                            <SolidColorBrush Color="{x:Bind local:App.GetColorFromHex(Post.Listing.LinkFlairBackgroundColor)}" />
                        </Border.Background>
                        <TextBlock Text="{x:Bind Post.Listing.LinkFlairText}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{x:Bind local:App.GetTextColorFromHex(Post.Listing.LinkFlairTextColor)}" />
                            </TextBlock.Foreground>
                        </TextBlock>
                    </Border>
                </controls:WrapPanel>

                <controls:MarkdownTextBlock
                    Margin="0,5,0,0"
                    x:Phase="1"
                    Background="Transparent"
                    Visibility="{x:Bind Post.Listing.IsSelf}"
                    LinkClicked="MarkdownLinkClicked"
                    Text="{x:Bind ShortDescription}"
                    TextWrapping="WrapWholeWords" />

                <Image
                    x:Name="ImagePost"
                    MaxWidth="500"
                    Margin="0,4,0,0"
                    x:Load="{x:Bind HasImage}">
                    <Image.Source>
                        <BitmapImage DecodePixelType="Logical" UriSource="{x:Bind ImageUri}" />
                    </Image.Source>
                </Image>

                <MediaPlayerElement 
                    x:Name="MediaRedditPlayer"
                    x:Load="{x:Bind Post.Listing.IsVideo}"
                    Source="{x:Bind VideoSource}"
                    AutoPlay="False"
                    Margin="0,4,0,0"
                    AreTransportControlsEnabled="True" />

                <FlipView 
                    x:Name="Flip"
                    Margin="0,4,0,0"
                    MaxHeight="650"
                    x:Load="{x:Bind IsGallery}"
                    ItemsSource="{x:Bind Images}">
                    <FlipView.ItemTemplate>
                        <DataTemplate x:DataType="redditthings:Image">
                            <Image Source="{x:Bind Url}" />
                        </DataTemplate>
                    </FlipView.ItemTemplate>
                </FlipView>

                <StackPanel Orientation="Horizontal">
                    <TextBlock Margin="0,10,0,3" Text="{x:Bind CommentsCountInUI}" />

                    <Button Style="{StaticResource TransparentButton}" Foreground="{StaticResource SystemAccentColor}" Content="Share" Margin="4,0,0,-6" Padding="2">
                        <Button.Flyout>
                            <MenuFlyout>
                                <MenuFlyoutItem Text="Share to">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72D;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Crosspost" Click="CrossPostButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE72A;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>

                                <MenuFlyoutItem Text="Copy link" Click="CopyLinkButton_Click">
                                    <MenuFlyoutItem.Icon>
                                        <FontIcon Glyph="&#xE16F;" />
                                    </MenuFlyoutItem.Icon>
                                </MenuFlyoutItem>
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2">
                        Save
                    </HyperlinkButton>

                    <HyperlinkButton Visibility="{x:Bind IsCurrentUserOP, Converter={StaticResource BoolToVis}}" Click="RemoveUserPostButton_Click" Margin="4,0,0,-6" Padding="2">
                        Delete
                    </HyperlinkButton>

                    <HyperlinkButton IsEnabled="{x:Bind local:App.OppositeOf(Post.Listing.Removed)}" Visibility="{x:Bind Post.Listing.SrDetail.UserIsModerator, Mode=OneWay, Converter={StaticResource BoolToVis}}" Click="RemovePostButton_Click" Margin="4,0,0,-6" Padding="2">
                        Remove
                    </HyperlinkButton>

                    <HyperlinkButton IsEnabled="{x:Bind local:App.OppositeOf(Post.Listing.Approved)}" Visibility="{x:Bind Post.Listing.SrDetail.UserIsModerator, Mode=OneWay, Converter={StaticResource BoolToVis}}" Click="ApproveButton_Click" Margin="4,0,0,-6" Padding="2">
                        Approve
                    </HyperlinkButton>

                    <HyperlinkButton IsEnabled="{x:Bind local:App.OppositeOf(Post.Listing.Spam)}" Visibility="{x:Bind Post.Listing.SrDetail.UserIsModerator, Mode=OneWay, Converter={StaticResource BoolToVis}}" Click="SpamButton_Click" Margin="4,0,0,-6" Padding="2">
                        Spam
                    </HyperlinkButton>

                    <HyperlinkButton IsEnabled="{x:Bind local:App.OppositeOf(Post.Listing.Stickied)}" Visibility="{x:Bind Post.Listing.SrDetail.UserIsModerator, Mode=OneWay, Converter={StaticResource BoolToVis}}" Click="PinButton_Click" Margin="4,0,0,-6" Padding="2">
                        Pin
                    </HyperlinkButton>

                    <HyperlinkButton Margin="4,0,0,-6" Padding="2" Click="OnReportButtonClick">
                        Report
                    </HyperlinkButton>
                </StackPanel>
            </StackPanel>
        </Grid>
    </DataTemplate>

</ResourceDictionary>
