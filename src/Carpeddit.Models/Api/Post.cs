using Carpeddit.Common.Converters;
using System;
using System.Collections.Generic;
using System.Text.Json.Nodes;
using System.Text.Json.Serialization;

#nullable enable

namespace Carpeddit.Models
{
    public record Post(
        [property: JsonPropertyName("author_flair_background_color")] string AuthorFlairBackgroundColor,
        [property: JsonPropertyName("approved_at_utc")] DateTime ApprovedAtUtc,
        [property: JsonPropertyName("subreddit")] string Subreddit,
        [property: JsonPropertyName("selftext")] string Selftext,
        [property: JsonPropertyName("user_reports")] JsonArray UserReports,
        [property: JsonPropertyName("user_reports_dismissed")] JsonArray DismissedUserReports,
        [property: JsonPropertyName("saved")] bool? Saved,
        [property: JsonPropertyName("mod_reason_title")] string ModReasonTitle,
        [property: JsonPropertyName("gilded")] int? Gilded,
        [property: JsonPropertyName("clicked")] bool? Clicked,
        [property: JsonPropertyName("title")] string Title,
        [property: JsonPropertyName("link_flair_richtext")] IReadOnlyList<LinkFlairRichText> LinkFlairRichtext,
        [property: JsonPropertyName("subreddit_name_prefixed")] string SubredditNamePrefixed,
        [property: JsonPropertyName("hidden")] bool? Hidden,
        [property: JsonPropertyName("pwls")] int? Pwls,
        [property: JsonPropertyName("link_flair_css_class")] string LinkFlairCssClass,
        [property: JsonPropertyName("downs")] int? Downs,
        [property: JsonPropertyName("thumbnail_height")] int? ThumbnailHeight,
        [property: JsonPropertyName("top_awarded_type")] object TopAwardedType,
        [property: JsonPropertyName("parent_whitelist_status")] string ParentWhitelistStatus,
        [property: JsonPropertyName("hide_score")] bool? HideScore,
        [property: JsonPropertyName("name")] string Name,
        [property: JsonPropertyName("quarantine")] bool? Quarantine,
        [property: JsonPropertyName("link_flair_text_color")] string LinkFlairTextColor,
        [property: JsonPropertyName("upvote_ratio")] double UpvoteRatio,
        [property: JsonPropertyName("ignore_reports")] bool? IgnoreReports,
        [property: JsonPropertyName("ups")] int? Ups,
        [property: JsonPropertyName("domain")] string Domain,
        [property: JsonPropertyName("thumbnail_width")] int? ThumbnailWidth,
        [property: JsonPropertyName("author_flair_template_id")] string AuthorFlairTemplateId,
        [property: JsonPropertyName("is_original_content")] bool? IsOriginalContent,
        [property: JsonPropertyName("author_fullname")] string AuthorFullname,
        [property: JsonPropertyName("is_reddit_media_domain")] bool? IsRedditMediaDomain,
        [property: JsonPropertyName("is_meta")] bool? IsMeta,
        [property: JsonPropertyName("category")] string? Category,
        [property: JsonPropertyName("link_flair_text")] string LinkFlairText,
        [property: JsonPropertyName("can_mod_post")] bool? CanModPost,
        [property: JsonPropertyName("score")] int? Score,
        [property: JsonPropertyName("approved_by")] string? ApprovedBy,
        [property: JsonPropertyName("is_created_from_ads_ui")] bool? IsCreatedFromAdsUi,
        [property: JsonPropertyName("author_premium")] bool? AuthorPremium,
        [property: JsonPropertyName("thumbnail")] string Thumbnail,
        [property: JsonPropertyName("edited")] bool? Edited,
        [property: JsonPropertyName("author_flair_css_class")] string AuthorFlairCssClass,
        [property: JsonPropertyName("author_flair_richtext")] IReadOnlyList<IReadOnlyList<FlairRichText>> AuthorFlairRichtext,
        [property: JsonPropertyName("post_hint")] string PostHint,
        [property: JsonPropertyName("content_categories")] object ContentCategories,
        [property: JsonPropertyName("is_self")] bool IsSelf,
        [property: JsonPropertyName("subreddit_type")] string SubredditType,
        [property: JsonPropertyName("created"), JsonConverter(typeof(LocalTimestampConverter))] DateTime Created,
        [property: JsonPropertyName("link_flair_type")] string LinkFlairType,
        [property: JsonPropertyName("wls")] int Wls,
        [property: JsonPropertyName("removed_by_category")] object RemovedByCategory,
        [property: JsonPropertyName("banned_by")] object BannedBy,
        [property: JsonPropertyName("author_flair_type")] string AuthorFlairType,
        [property: JsonPropertyName("total_awards_received")] int? TotalAwardsReceived,
        [property: JsonPropertyName("allow_live_comments")] bool? AllowLiveComments,
        [property: JsonPropertyName("selftext_html")] string SelfTextHtml,
        [property: JsonPropertyName("likes")] object Likes,
        [property: JsonPropertyName("suggested_sort")] string SuggestedSort,
        [property: JsonPropertyName("banned_at_utc")] object BannedAtUtc,
        [property: JsonPropertyName("url_overridden_by_dest")] string UrlOverriddenByDest,
        [property: JsonPropertyName("view_count")] int? ViewCount,
        [property: JsonPropertyName("archived")] bool Archived,
        [property: JsonPropertyName("no_follow")] bool? NoFollow,
        [property: JsonPropertyName("spam")] bool Spam,
        [property: JsonPropertyName("is_crosspostable")] bool IsCrosspostable,
        [property: JsonPropertyName("pinned")] bool Pinned,
        [property: JsonPropertyName("over_18")] bool Over18,
        [property: JsonPropertyName("preview")] Preview Preview,
        [property: JsonPropertyName("all_awardings")] IReadOnlyList<object> AllAwardings,
        [property: JsonPropertyName("awarders")] IReadOnlyList<object> Awarders,
        [property: JsonPropertyName("media_only")] bool MediaOnly,
        [property: JsonPropertyName("link_flair_template_id")] string LinkFlairTemplateId,
        [property: JsonPropertyName("can_gild")] bool CanGild,
        [property: JsonPropertyName("removed")] bool Removed,
        [property: JsonPropertyName("spoiler")] bool Spoiler,
        [property: JsonPropertyName("locked")] bool Locked,
        [property: JsonPropertyName("author_flair_text")] string? AuthorFlairText,
        [property: JsonPropertyName("treatment_tags")] IReadOnlyList<object> TreatmentTags,
        [property: JsonPropertyName("visited")] bool Visited,
        [property: JsonPropertyName("removed_by")] object RemovedBy,
        [property: JsonPropertyName("mod_note")] string ModNote,
        [property: JsonPropertyName("distinguished")] string? Distinguished,
        [property: JsonPropertyName("subreddit_id")] string SubredditId,
        [property: JsonPropertyName("author_is_blocked")] bool AuthorIsBlocked,
        [property: JsonPropertyName("mod_reason_by")] string ModReasonBy,
        [property: JsonPropertyName("num_reports")] int? NumReports,
        [property: JsonPropertyName("removal_reason")] string? RemovalReason,
        [property: JsonPropertyName("link_flair_background_color")] string LinkFlairBackgroundColor,
        [property: JsonPropertyName("id")] string Id,
        [property: JsonPropertyName("num_duplicates")] int? NumDuplicates,
        [property: JsonPropertyName("report_reasons")] IReadOnlyList<object> ReportReasons,
        [property: JsonPropertyName("author")] string Author,
        [property: JsonPropertyName("discussion_type")] object DiscussionType,
        [property: JsonPropertyName("num_comments")] int? NumComments,
        [property: JsonPropertyName("send_replies")] bool SendReplies,
        [property: JsonPropertyName("media")] object Media,
        [property: JsonPropertyName("contest_mode")] bool ContestMode,
        [property: JsonPropertyName("author_patreon_flair")] bool AuthorPatreonFlair,
        [property: JsonPropertyName("approved")] bool Approved,
        [property: JsonPropertyName("author_flair_text_color")] object AuthorFlairTextColor,
        [property: JsonPropertyName("permalink")] string Permalink,
        [property: JsonPropertyName("whitelist_status")] string WhitelistStatus,
        [property: JsonPropertyName("stickied")] bool Stickied,
        [property: JsonPropertyName("url")] string Url,
        [property: JsonPropertyName("subreddit_subscribers")] int? SubredditSubscribers,
        [property: JsonPropertyName("created_utc"), JsonConverter(typeof(UtcTimestampConverter))] DateTime CreatedUtc,
        [property: JsonPropertyName("num_crossposts")] int? NumCrossposts,
        [property: JsonPropertyName("mod_reports")] IReadOnlyList<object> ModReports,
        [property: JsonPropertyName("is_video")] bool IsVideo
    );
}
